#include <WiFi.h>
#include <SPI.h>
#include <MFRC522.h>
#include <WebSocketsServer.h>

// Configuración de red WiFi
const char* ssid = "INFINITUMF4AF";
const char* password = "$7UegKW37aT;";

// WebSocket en el puerto 81
WebSocketsServer webSocket = WebSocketsServer(81);

#define SS_PIN 5        // Pin SDA conectado al GPIO 5 del ESP32
#define RST_PIN 22      // Pin RST conectado al GPIO 22 del ESP32

MFRC522 rfid(SS_PIN, RST_PIN); // Instancia de la clase MFRC522
MFRC522::MIFARE_Key key; 

byte nuidPICC[4];
String cardData = "No card detected";

void setup() { 
  Serial.begin(115200);   
  SPI.begin(18, 19, 23);  
  rfid.PCD_Init();        

  for (byte i = 0; i < 6; i++) {
    key.keyByte[i] = 0xFF;
  }

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nWiFi conectado");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  webSocket.begin();
  webSocket.onEvent(webSocketEvent);
}

void loop() {
  webSocket.loop();

  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial())
    return;

  cardData = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    cardData += String(rfid.uid.uidByte[i], HEX);
    if (i < rfid.uid.size - 1) cardData += ":";
  }

  Serial.println("Tarjeta leída: " + cardData);
  
  // Enviar ID de la tarjeta al cliente WebSocket
  webSocket.broadcastTXT(cardData);

  rfid.PICC_HaltA();
  rfid.PCD_StopCrypto1();
}

void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t length) {
  if (type == WStype_TEXT) {
    Serial.printf("[%u] Texto recibido: %s\n", num, payload);
  }
}
